#!/usr/bin/env sh

# opts

usage () {
(
    name=$(basename "$0")
    len=$(printf "%s" "$name" |wc -m)
    ___O=$(printf "%*s" "$len" ' ')

    cat <<EOF
Usage: $name [-h|--help] [DIR]

       $___O DIR: directory containing the slides.
       $___O -h|--help: show this help.
EOF
)
    exit 0;
}

for arg ; do
case "$arg" in
--help|-h) usage; shift ;;
esac
done

WORK_DIR="${1:-./}"
SLIDES="$(LANG=C find "$WORK_DIR" -type f | sort)"
TOTAL=$(echo "$SLIDES" |wc -l)
I=0

# term control

hide_cursor() { printf '\e[?25l'; }
show_cursor() { printf '\e[?25h'; }
clear_screen() { printf '\e[2J'; }
clear_line() { printf '\e[2K'; }
# Move cursor to given coordinates
# $1: line
# $2: column
move_to() { printf '\e[%sH' "${1};${2}"; }
# Move cursor down N lines
# $1: nb_line
move_down() { printf '\e[%sB' "$1"; }

clear_screen_inplace() {
    x=$LINES
    move_to 0 0
    while [ $x -gt 0 ]; do
        clear_line
        move_down 1
        x=$((x - 1))
    done
}

get_screen_geometry() {
    LINES=$(tput lines)
    COLUMNS=$(tput cols)
}

slide_n() { echo "$SLIDES" | sed -n "${1}"p; }

# Cat file clamped to geometry
# $1: file name
# $2: screen height (lines)
# $3: screen width (columns)
clamped_cat() { cut -c-"$3" "$1" | head -$(($2 - 1)); }

quit() {
    trap - EXIT
    [ "$old_tty_cfg" ] && stty "$old_tty_cfg"
    clear_screen
    move_to "$LINES" 0
    show_cursor
    printf '\r'
    exit 0
}
trap 'quit' INT QUIT TERM EXIT

show_current_slide() {
    current_slide=$(slide_n $((I + 1)))

    clear_screen_inplace
    move_to 0 0

    if [ "$I" -eq "$TOTAL" ]; then
        move_to $((LINES / 2 - 1)) $((COLUMNS / 2 - 2))
        printf 'END.'
        return
    else
        clamped_cat "$current_slide" "$LINES" "$COLUMNS"
    fi

    # Write slide number at bottom left.
    move_to "$LINES" 0
    printf '%d/%d' "$((I+1))" "$TOTAL"
}

# Read one char, +icanon should be restored on exit
old_tty_cfg="$(stty -g)"
stty -icanon
read_char() { dd ibs=1 count=1 2>/dev/null; }

get_screen_geometry
hide_cursor
while true; do
    # clamp I
    [ "$I" -lt 0 ] && I=0
    [ "$I" -gt "$TOTAL" ] && I=$TOTAL

    show_current_slide

    # Navigation
    case "$(read_char)" in
    "j"|"n")
        [ "$I" -eq "$TOTAL" ] && quit
        I=$((I + 1))
        ;;
    "k"|"p"|"N")
        I=$((I - 1))
        ;;
    "g"|"0")
        I=0
        ;;
    "G")
        I=$((TOTAL - 1))
        ;;
    "q")
        quit
        ;;
    *)
        ;;
    esac
done
